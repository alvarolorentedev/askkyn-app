{"version":3,"sources":["components/start/index.jsx","components/questionnaire/index.jsx","components/summary/index.jsx","components/answers/index.jsx","service/questionnaire/create.js","service/questionnaire/join.js","service/questionnaire/submit.js","service/index.js","App.jsx","reportWebVitals.js","index.js"],"names":["StartPage","navigate","finishedLoading","create","join","useState","name","setName","identifier","setIdentifier","useEffect","onCreate","a","result","success","onJoin","id","Button","className","onClick","Form","Control","type","placeholder","value","onChange","event","target","Start","props","QuestionnairePage","sessionId","submit","questions","setQuestions","submitQuestions","updateQuestion","indexToChange","field","map","question","index","Table","striped","hover","size","data-testid","answers","icon","answer","indexAnswer","indexQuestion","updateAnswer","indexToDelete","filter","_","votes","Questionnaire","SummaryPage","db","changes","live","include_docs","doc_ids","on","doc","length","toString","Summary","AnswersPage","username","Answers","idGeneratorFunction","Math","random","replace","substr","currentTimestampGeneratorFunction","Date","now","idGenerator","timestampGenerator","_id","createdOn","put","players","get","currentRecord","PouchDB","createQuestionnaire","joinQuestionnaire","submitQuestionnaire","library","add","fab","far","fas","Loading","Component","rest","isLoading","setIsLoading","err","Modal","show","keyboard","backdrop","centered","Body","PublicRoute","App","Navbar","Brand","href","alt","src","width","height","default","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46adf5d9.chunk.js","sourcesContent":["import * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport \"./index.scss\"\nimport { Button, Form } from \"react-bootstrap\"\n\nconst StartPage = ({ navigate, finishedLoading, create, join }) => {\n  const [name, setName] = useState(\"\");\n  const [identifier, setIdentifier] = useState(\"\");\n  useEffect(finishedLoading ,[finishedLoading]);\n\n  const onCreate = async () => {\n      const result = await create()\n      if (result.success)\n        navigate(`/session/${result.identifier}/questionnaire`)\n  }\n\n  const onJoin = async () => {\n      const result = await join(identifier, name)\n      if (result.success)\n        navigate(`/session/${identifier}/answers/${name}`)\n  }\n  return (<div id=\"container\">\n    <Button className=\"btn-start\" onClick={onCreate}> Create New</Button>\n    <Form.Control className=\"form-control-start\" type=\"text\" placeholder=\"Enter Name\" value={ name } onChange={(event) => setName(event.target.value)} />\n    <Form.Control className=\"form-control-start\" type=\"text\" placeholder=\"Enter Identifier\" value={ identifier } onChange={(event) => setIdentifier(event.target.value)} />\n    <Button className=\"btn-start\" onClick={onJoin}> Join </Button>\n  </div>)\n}\n\nexport const Start = (props) => <StartPage {...props} />;\n","import * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport \"./index.scss\"\nimport { Button, Table, Form } from \"react-bootstrap\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\n\nconst QuestionnairePage = ({ navigate, sessionId, finishedLoading, submit }) => {\n  const [questions, setQuestions] = useState([]);\n  useEffect(finishedLoading ,[finishedLoading]);\n\n  const addQuestions = () => setQuestions([...questions, { question: \"\", answers: [] }])\n  const submitQuestions = async () => {\n    const result = await submit(sessionId, questions)\n    if(result.success)\n      navigate(`/session/${sessionId}/summary`)\n\n  }\n  const removeQuestions = (indexToDelete) => setQuestions(questions.filter((_, index) =>  index !== indexToDelete))\n  const updateQuestion = (indexToChange, field, value) => \n    setQuestions(questions.map((question, index) =>  indexToChange === index ? {...question, [field]: value } : question ))\n\n  const updateAnswer = (indexQuestion, indexAnswer, field, value) => \n    updateQuestion(indexQuestion, \"answers\", questions[indexQuestion].answers.map((answer, index) => indexAnswer === index ? {...answer, [field]: value } : answer ))\n  const AddAnswer = (indexQuestion) => \n    updateQuestion(indexQuestion, \"answers\", [...questions[indexQuestion].answers, { value: \"\", votes:[] }])\n  const removeAnswer = (indexQuestion, indexToDelete) => \n    updateQuestion(indexQuestion, \"answers\", questions[indexQuestion].answers.filter((_, index) =>  index !== indexToDelete))\n\n  return (<>\n    <Table striped hover size=\"sm\" data-testid=\"main-table\">\n        <thead>\n            <tr>\n                <th>Question</th>\n                <th>Answers</th>\n                <th><div className=\"actions\">\n                    Actions\n                    <Button onClick={addQuestions} ><FontAwesomeIcon icon={['fas', 'plus']} /></Button>\n                </div></th>\n            </tr>\n        </thead>\n        <tbody>\n          {\n            questions.map((question, index) => \n              (<tr key={`question_${index}`}>\n                <td>\n                  <Form.Control type=\"text\" placeholder=\"Enter Question\" value={question.question} onChange={(event) => updateQuestion(index, \"question\", event.target.value)} />\n                </td>\n                <td>{question.answers.map((answer, indexAnswer) => \n                  (<>\n                    <Form.Control type=\"text\" placeholder=\"Enter Answer\" value={answer.value} onChange={(event) => updateAnswer(index, indexAnswer, \"value\", event.target.value)} />\n                    <Button onClick={() => removeAnswer(index, indexAnswer)}><FontAwesomeIcon icon={['fas', 'trash']} /></Button>\n                  </>))}\n                </td>\n                <td>\n                  <div className=\"actions\">\n                    <Button onClick={() => AddAnswer(index)}><FontAwesomeIcon icon={['fas', 'plus']} /></Button>\n                    <Button onClick={() => removeQuestions(index)}><FontAwesomeIcon icon={['fas', 'trash']} /></Button>\n                  </div>\n                </td>\n              </tr>))\n          }\n        </tbody>\n    </Table>\n    <Button onClick={submitQuestions}><FontAwesomeIcon icon={['fas', 'play']} /></Button>\n  </>)\n}\n\nexport const Questionnaire = (props) => <QuestionnairePage {...props} />;\n","import * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport \"./index.scss\"\nimport { Button, Table, Form } from \"react-bootstrap\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\n\nconst SummaryPage = ({ sessionId, finishedLoading, db }) => {\n  const [questions, setQuestions] = useState([]);\n  useEffect(finishedLoading ,[finishedLoading]);\n  useEffect(() => {\n    db.changes({\n      live: true,\n      include_docs: true,\n      doc_ids: [sessionId]\n    }).on('change', ({doc}) => setQuestions(doc.questions));\n  } ,[]);\n  \n  return (<>\n    <Table striped hover size=\"sm\" data-testid=\"main-table\">\n        <thead>\n            <tr>\n                <th>Question</th>\n                <th>Answers</th>\n            </tr>\n        </thead>\n        <tbody>\n          {\n            questions.map((question, index) => \n              (<tr key={`question_${index}`}>\n                <td>\n                  {question.question}\n                </td>\n                <td>{question.answers.map((answer) => \n                  (<div>\n                    {answer.value} ({answer.votes.length}): {answer.votes.toString()}\n                  </div>))}\n                </td>\n              </tr>))\n          }\n        </tbody>\n    </Table>\n  </>)\n}\n\nexport const Summary = (props) => <SummaryPage {...props} />;\n","import * as React from \"react\"\nimport { useEffect } from \"react\"\nimport \"./index.scss\"\n\nconst AnswersPage = ({ sessionId, username, finishedLoading }) => {\n  useEffect(finishedLoading ,[finishedLoading]);\n\n  return (<div id=\"container\">Answers: {sessionId} for {username}</div>)\n}\n\nexport const Answers = (props) => <AnswersPage {...props} />;\n","const idGeneratorFunction = () => Math.random().toString(36).replace('0.', '').substr(1,5)\nconst currentTimestampGeneratorFunction = () => Date.now()\n\nexport const create = async (db, idGenerator=idGeneratorFunction, timestampGenerator=currentTimestampGeneratorFunction) => {\n    const _id = idGenerator()\n    var createdOn = timestampGenerator()\n    try {\n        const result = await db.put({_id, createdOn, players: [], questions: []})\n        return({\n            success: true,\n            identifier: _id\n        })\n    } catch (error) {\n        return({\n            success: false\n        })\n    }\n}","export const join = async (db, identifier, username) => {\n    try {\n        const currentRecord = await db.get(identifier)\n        await db.put({...currentRecord, players: [...currentRecord.players, username]})\n        return({\n            success: true\n        })\n    } catch (error) {\n        return({\n            success: false\n        })\n    }\n}","export const submit = async (db, identifier, questions) => {\n    try {\n        const currentRecord = await db.get(identifier)\n        await db.put({ ...currentRecord, questions })\n        return({\n            success: true\n        })\n    } catch (error) {\n        return({\n            success: false\n        })\n    }\n}","import PouchDB from 'pouchdb'\nimport { create } from './questionnaire/create'\nimport { join } from './questionnaire/join'\nimport { submit } from './questionnaire/submit'\n\nconst backendBaseUrl = process.env.NODE_ENV === 'production' ? \"https://askkyn.herokuapp.com\" : \"http://localhost:8080\"\n\nexport const db = new PouchDB(`${backendBaseUrl}/db/askkyn`)\nexport const createQuestionnaire = () => create(db)\nexport const joinQuestionnaire = (identifier, username) => join(db, identifier, username)\nexport const submitQuestionnaire = (identifier, questions) => submit(db, identifier, questions)","import React from \"react\"\nimport { Router, navigate } from \"@reach/router\"\nimport {Navbar, Modal} from \"react-bootstrap\"\nimport { Start } from \"./components/start/index.jsx\"\nimport { Questionnaire } from \"./components/questionnaire/index.jsx\"\nimport { Summary } from \"./components/summary/index.jsx\"\nimport { Answers } from \"./components/answers/index.jsx\"\nimport { useState } from 'react'\nimport { Grid } from 'svg-loaders-react'\nimport './App.scss'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { far } from \"@fortawesome/free-regular-svg-icons\"\nimport { fas } from \"@fortawesome/free-solid-svg-icons\"\nimport { createQuestionnaire, joinQuestionnaire, submitQuestionnaire, db } from './service'\n\nlibrary.add(fab, far, fas)\n\n\nconst Loading = ({ Component, ...rest }) =>{\n  const [isLoading,setIsLoading] = useState(true);\n  return (<>\n    <Component {...rest} finishedLoading={(err) => {\n      setIsLoading(false)\n      if(err)\n        navigate(`/error/${err}`)\n    }} />\n    <Modal\n        show={isLoading}\n        keyboard={false}\n        backdrop=\"static\"\n        size=\"sm\"\n        centered\n      >\n        <Modal.Body>\n          <Grid />\n        </Modal.Body>\n      </Modal>\n    </>)\n}\n\nconst PublicRoute = ({ ...rest }) => (\n  <Loading {...rest} />\n);\n\nconst App = () => {\n  return (<div id=\"main\">\n    <Navbar>\n      <Navbar.Brand href=\"/\">\n        <img\n          alt=\"\"\n          src=\"./logo.webp\"\n          width=\"42\"\n          height=\"42\"\n          className=\"d-inline-block align-top\"\n        /> Askkyn\n      </Navbar.Brand>\n    </Navbar>\n   <Router>\n     <PublicRoute default path=\"default\" Component={Start} create={createQuestionnaire} join={joinQuestionnaire} />\n     <PublicRoute path=\"session/:sessionId/questionnaire\" Component={Questionnaire} db={db} submit={submitQuestionnaire} />\n     <PublicRoute path=\"session/:sessionId/summary\" Component={Summary} db={db} />\n     <PublicRoute path=\"session/:sessionId/answers/:username\" Component={Answers} db={db} />\n   </Router>\n </div>)\n };\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}