{"version":3,"sources":["components/default/index.jsx","service/game/create.js","service/game/join.js","service/index.js","App.jsx","reportWebVitals.js","index.js"],"names":["DefaultPage","finishedLoading","create","db","join","useState","name","setName","identifier","setIdentifier","useEffect","onCreate","a","result","console","log","onJoin","id","Button","onClick","Form","Control","type","placeholder","value","onChange","event","target","Default","props","_id","Math","random","toString","replace","substr","put","success","username","get","PouchDB","createGame","joinGame","info","then","library","add","fab","far","fas","Loading","Component","rest","isLoading","setIsLoading","err","navigate","Modal","show","keyboard","backdrop","size","centered","Body","PublicRoute","App","Navbar","Brand","href","alt","src","width","height","className","default","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d036299c.chunk.js","sourcesContent":["import * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport \"./index.scss\"\nimport { Button, Form } from \"react-bootstrap\"\n\nconst DefaultPage = ({ finishedLoading, db, create, join }) => {\n  const [name, setName] = useState(null);\n  const [identifier, setIdentifier] = useState(null);\n  useEffect(finishedLoading ,[finishedLoading]);\n\n  const onCreate = async () => {\n      const result = await create()\n      console.log(result)\n  }\n\n  const onJoin = async () => {\n      const result = await join(identifier, name)\n      console.log(result)\n  }\n  return (<div id=\"container\">\n    <Button onClick={onCreate}> Create New</Button>\n    <Form.Control type=\"text\" placeholder=\"Enter Name\" value={ name } onChange={(event) => setName(event.target.value)} />\n    <Form.Control type=\"text\" placeholder=\"Enter Identifier\" value={ identifier } onChange={(event) => setIdentifier(event.target.value)} />\n    <Button onClick={onJoin}> Join </Button>\n  </div>)\n}\n\nexport const Default = (props) => <DefaultPage {...props} />;\n","export const create = async (db) => {\n    const _id = Math.random().toString(36).replace('0.', '').substr(1,5)\n    try {\n        await db.put({_id})\n        return({\n            success: true,\n            identifier: _id\n        })\n    } catch (error) {\n        return({\n            success: false\n        })\n    }\n}","export const join = async (db, identifier, username) => {\n    try {\n        const result = await db.get(identifier)\n        return({\n            success: true,\n            result: result\n        })\n    } catch (error) {\n        return({\n            success: false\n        })\n    }\n}","import PouchDB from 'pouchdb'\nimport { create } from './game/create'\nimport { join } from './game/join'\n\nexport const db = new PouchDB('askkyn');\nexport const createGame = () => create(db)\nexport const joinGame = (identifier, username) => join(db, identifier, username)\n\ndb.info().then(function (info) {\n    console.log(info);\n  })","import React from \"react\";\nimport { Router, navigate } from \"@reach/router\";\nimport {Navbar, Modal} from \"react-bootstrap\";\nimport { Default } from \"./components/default/index.jsx\"\nimport { useState } from 'react'\nimport { Grid } from 'svg-loaders-react'\nimport './App.scss'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { far } from \"@fortawesome/free-regular-svg-icons\"\nimport { fas } from \"@fortawesome/free-solid-svg-icons\"\nimport {db, createGame, joinGame } from './service'\n\nlibrary.add(fab, far, fas)\n\n\nconst Loading = ({ Component, ...rest }) =>{\n  const [isLoading,setIsLoading] = useState(true);\n  return (<>\n    <Component {...rest} finishedLoading={(err) => {\n      setIsLoading(false)\n      if(err)\n        navigate(`/error/${err}`)\n    }} />\n    <Modal\n        show={isLoading}\n        keyboard={false}\n        backdrop=\"static\"\n        size=\"sm\"\n        centered\n      >\n        <Modal.Body>\n          <Grid />\n        </Modal.Body>\n      </Modal>\n    </>)\n}\n\nconst PublicRoute = ({ ...rest }) => (\n  <Loading {...rest} />\n);\n\nconst App = () => {\n  return (<div id=\"main\">\n    <Navbar>\n      <Navbar.Brand href=\"/\">\n        <img\n          alt=\"\"\n          src=\"./logo.webp\"\n          width=\"42\"\n          height=\"42\"\n          className=\"d-inline-block align-top\"\n        /> Askkyn\n      </Navbar.Brand>\n    </Navbar>\n   <Router>\n     <PublicRoute default path=\"default\" Component={Default} db={db} create={createGame} join={joinGame} />\n   </Router>\n </div>)\n };\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}