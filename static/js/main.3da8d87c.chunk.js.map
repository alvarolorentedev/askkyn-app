{"version":3,"sources":["components/start/index.jsx","components/questionnaire/index.jsx","components/summary/index.jsx","components/answers/index.jsx","service/questionnaire/create.js","service/questionnaire/join.js","service/questionnaire/submit.js","service/questionnaire/activate.js","service/questionnaire/answer.js","service/index.js","service/questionnaire/subscribe.js","logo.webp","App.jsx","reportWebVitals.js","index.js"],"names":["StartPage","navigate","sessionId","finishedLoading","create","join","useState","name","setName","identifier","setIdentifier","useEffect","onCreate","a","result","success","onJoin","id","Button","className","onClick","Form","Control","type","placeholder","value","onChange","event","target","disabled","Start","props","QuestionnairePage","submit","questions","setQuestions","submitQuestions","updateQuestion","indexToChange","field","map","question","index","Table","striped","hover","size","data-testid","answers","icon","answer","indexAnswer","indexQuestion","updateAnswer","indexToDelete","filter","_","votes","Questionnaire","SummaryPage","activateQuestion","subscribeChanges","baseUrl","window","location","href","split","sessionUrl","urlArea","setUrlArea","activeQuestionIndex","setActiveQuestionIndex","doc","InputGroup","FormControl","ref","textarea","aria-label","aria-describedby","readOnly","Append","variant","select","document","execCommand","length","toString","setActive","Summary","AnswersPage","username","answerQuestion","selectedAnswer","setSelectedAnswer","active","Card","Body","Title","Text","Answers","idGeneratorFunction","Math","random","replace","substr","currentTimestampGeneratorFunction","Date","now","db","idGenerator","timestampGenerator","_id","createdOn","put","players","get","currentRecord","activate","IndexAnswer","Set","PouchDB","createQuestionnaire","joinQuestionnaire","submitQuestionnaire","subscribeQuestionnaire","console","log","changes","live","include_docs","doc_ids","on","subscribe","library","add","fab","far","fas","Loading","Component","rest","isLoading","setIsLoading","err","Modal","show","keyboard","backdrop","centered","PublicRoute","App","Navbar","Brand","alt","src","logo","width","height","default","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3da8d87c.chunk.js","sourcesContent":["import * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport \"./index.scss\"\nimport { Button, Form } from \"react-bootstrap\"\n\nconst StartPage = ({ navigate, sessionId, finishedLoading, create, join }) => {\n  const [name, setName] = useState(\"\");\n  const [identifier, setIdentifier] = useState(\"\");\n  useEffect(finishedLoading ,[finishedLoading]);\n  useEffect(() => {\n    if(sessionId)\n      setIdentifier(sessionId)\n  },[sessionId]);\n  const onCreate = async () => {\n      const result = await create()\n      if (result.success)\n        navigate(`/session/${result.identifier}/questionnaire`)\n  }\n\n  const onJoin = async () => {\n      const result = await join(identifier, name)\n      if (result.success)\n        navigate(`/session/${identifier}/answers/${name}`)\n  }\n  return (<div id=\"container\">\n    {!sessionId && <Button className=\"btn-start\" onClick={onCreate}> Create New</Button>}\n    <Form.Control className=\"form-control-start\" type=\"text\" placeholder=\"Enter Name\" value={ name } onChange={(event) => setName(event.target.value)} />\n    <Form.Control className=\"form-control-start\" type=\"text\" placeholder=\"Enter Identifier\" value={ identifier } onChange={(event) => setIdentifier(event.target.value)} disabled={sessionId} />\n    <Button className=\"btn-start\" onClick={onJoin}> Join </Button>\n  </div>)\n}\n\nexport const Start = (props) => <StartPage {...props} />;\n","import * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport \"./index.scss\"\nimport { Button, Table, Form } from \"react-bootstrap\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\n\nconst QuestionnairePage = ({ navigate, sessionId, finishedLoading, submit }) => {\n  const [questions, setQuestions] = useState([]);\n  useEffect(finishedLoading ,[finishedLoading]);\n\n  const addQuestions = () => setQuestions([...questions, { question: \"\", answers: [] }])\n  const submitQuestions = async () => {\n    const result = await submit(sessionId, questions)\n    if(result.success)\n      navigate(`/session/${sessionId}/summary`)\n\n  }\n  const removeQuestions = (indexToDelete) => setQuestions(questions.filter((_, index) =>  index !== indexToDelete))\n  const updateQuestion = (indexToChange, field, value) => \n    setQuestions(questions.map((question, index) =>  indexToChange === index ? {...question, [field]: value } : question ))\n\n  const updateAnswer = (indexQuestion, indexAnswer, field, value) => \n    updateQuestion(indexQuestion, \"answers\", questions[indexQuestion].answers.map((answer, index) => indexAnswer === index ? {...answer, [field]: value } : answer ))\n  const AddAnswer = (indexQuestion) => \n    updateQuestion(indexQuestion, \"answers\", [...questions[indexQuestion].answers, { value: \"\", votes:[] }])\n  const removeAnswer = (indexQuestion, indexToDelete) => \n    updateQuestion(indexQuestion, \"answers\", questions[indexQuestion].answers.filter((_, index) =>  index !== indexToDelete))\n\n  return (<>\n    <Table striped hover size=\"sm\" data-testid=\"main-table\">\n        <thead>\n            <tr>\n                <th>Question</th>\n                <th>Answers</th>\n                <th><div className=\"actions\">\n                    Actions\n                    <Button onClick={addQuestions} ><FontAwesomeIcon icon={['fas', 'plus']} /></Button>\n                </div></th>\n            </tr>\n        </thead>\n        <tbody>\n          {\n            questions.map((question, index) => \n              (<tr key={`question_${index}`}>\n                <td>\n                  <Form.Control type=\"text\" placeholder=\"Enter Question\" value={question.question} onChange={(event) => updateQuestion(index, \"question\", event.target.value)} />\n                </td>\n                <td>{question.answers.map((answer, indexAnswer) => \n                  (<>\n                    <Form.Control type=\"text\" placeholder=\"Enter Answer\" value={answer.value} onChange={(event) => updateAnswer(index, indexAnswer, \"value\", event.target.value)} />\n                    <Button onClick={() => removeAnswer(index, indexAnswer)}><FontAwesomeIcon icon={['fas', 'trash']} /></Button>\n                  </>))}\n                </td>\n                <td>\n                  <div className=\"actions\">\n                    <Button onClick={() => AddAnswer(index)}><FontAwesomeIcon icon={['fas', 'plus']} /></Button>\n                    <Button onClick={() => removeQuestions(index)}><FontAwesomeIcon icon={['fas', 'trash']} /></Button>\n                  </div>\n                </td>\n              </tr>))\n          }\n        </tbody>\n    </Table>\n    <Button onClick={submitQuestions}><FontAwesomeIcon icon={['fas', 'play']} /></Button>\n  </>)\n}\n\nexport const Questionnaire = (props) => <QuestionnairePage {...props} />;\n","import * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport \"./index.scss\"\nimport { Button, Table, InputGroup, FormControl } from \"react-bootstrap\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\n\nconst SummaryPage = ({ sessionId, finishedLoading, activateQuestion, subscribeChanges }) => {\n  const baseUrl = window.location.href.split(\"/\")\n  const sessionUrl = `${baseUrl[0]}//${baseUrl[2]}/session/${sessionId}`\n  const [urlArea, setUrlArea] = useState(null)\n  const [questions, setQuestions] = useState([])\n  const [activeQuestionIndex, setActiveQuestionIndex] = useState(null)\n  useEffect(finishedLoading ,[finishedLoading])\n  useEffect(() => {\n    subscribeChanges(sessionId, \n      ({doc}) => {\n        setQuestions(doc.questions)\n      })\n  });\n\n  const setActive = (index) => {\n    activateQuestion(sessionId, index)\n    setActiveQuestionIndex(index)\n  }\n  const copyUrlToClipboard = () => {\n    urlArea.select()\n    document.execCommand(\"copy\")\n  }\n  return (<>\n    <InputGroup className=\"mb-3\">\n    <FormControl\n      ref={(textarea) => setUrlArea(textarea)}\n      placeholder=\"Session Url\"\n      aria-label=\"Session Url\"\n      aria-describedby=\"basic-addon2\"\n      value={sessionUrl}\n      readOnly={true}\n    />\n    <InputGroup.Append>\n      <Button variant=\"outline-secondary\" onClick={copyUrlToClipboard}>Copy</Button>\n    </InputGroup.Append>\n  </InputGroup>\n    <Table striped hover size=\"sm\" data-testid=\"main-table\">\n        <thead>\n            <tr>\n                <th>Question</th>\n                <th>Answers</th>\n                <th>Actions</th>\n            </tr>\n        </thead>\n        <tbody>\n          {\n            questions.map((question, index) => \n              (<tr key={`question_${index}`}>\n                <td>\n                  {question.question}\n                </td>\n                <td>{question.answers.map((answer) => \n                  (<div>\n                    {answer.value} ({answer.votes.length}): {answer.votes.toString()}\n                  </div>))}\n                </td>\n                <td>\n                  <div className=\"actions\">\n                    <Button onClick={() => setActive(index)} disabled={index === activeQuestionIndex}><FontAwesomeIcon icon={['fas', 'play']} /></Button>\n                  </div>\n                </td>\n              </tr>))\n          }\n        </tbody>\n    </Table>\n  </>)\n}\n\nexport const Summary = (props) => <SummaryPage {...props} />;\n","import * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport \"./index.scss\"\nimport { Card } from \"react-bootstrap\"\n\nconst AnswersPage = ({ sessionId, username, finishedLoading, answerQuestion, subscribeChanges }) => {\n  useEffect(finishedLoading ,[finishedLoading]);\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [activeQuestionIndex, setActiveQuestionIndex] = useState(null);\n  useEffect(finishedLoading ,[finishedLoading]);\n  useEffect(() => {\n    subscribeChanges(sessionId, \n      ({doc}) => {\n        setQuestions(doc.questions)\n        setActiveQuestionIndex(doc.active)\n      })\n  } ,);\n  return activeQuestionIndex != null\n    ? (<>\n        <h1>{questions[activeQuestionIndex].question}</h1>\n        {\n          questions[activeQuestionIndex].answers.map((answer, index) =>(\n            <Card key={`answer_${index}`} className={index === selectedAnswer ? 'answer-card-selected' : 'answer-card' } onClick={() => {\n              setSelectedAnswer(index)\n              answerQuestion(sessionId, username, activeQuestionIndex, index)\n            }}>\n              <Card.Body>\n                <Card.Title>#{index}</Card.Title>\n                <Card.Text>{answer.value}</Card.Text>\n              </Card.Body>\n            </Card>\n          ))\n        }\n        {/* {JSON.stringify(questions[activeQuestionIndex])} */}\n      </>)\n    : (<>Welcome {username} wait for owner to start survey</>)\n}\n\nexport const Answers = (props) => <AnswersPage {...props} />;\n","const idGeneratorFunction = () => Math.random().toString(36).replace('0.', '').substr(1,5)\nconst currentTimestampGeneratorFunction = () => Date.now()\n\nexport const create = async (db, idGenerator=idGeneratorFunction, timestampGenerator=currentTimestampGeneratorFunction) => {\n    const _id = idGenerator()\n    var createdOn = timestampGenerator()\n    try {\n        await db.put({_id, createdOn, players: [], questions: []})\n        return({\n            success: true,\n            identifier: _id\n        })\n    } catch (error) {\n        return({\n            success: false\n        })\n    }\n}","export const join = async (db, identifier, username) => {\n    try {\n        const currentRecord = await db.get(identifier)\n        await db.put({...currentRecord, players: [...currentRecord.players, username]})\n        return({\n            success: true\n        })\n    } catch (error) {\n        return({\n            success: false\n        })\n    }\n}","export const submit = async (db, identifier, questions) => {\n    try {\n        const currentRecord = await db.get(identifier)\n        await db.put({ ...currentRecord, questions })\n        return({\n            success: true\n        })\n    } catch (error) {\n        return({\n            success: false\n        })\n    }\n}","export const activate = async (db, identifier, index) => {\n    try {\n        const currentRecord = await db.get(identifier)\n        await db.put({...currentRecord, active: index})\n        return({\n            success: true\n        })\n    } catch (error) {\n        return({\n            success: false\n        })\n    }\n}","export const answer = async (db, identifier, username, indexQuestion, IndexAnswer) => {\n    try {\n        const currentRecord = await db.get(identifier)\n        await db.put(\n            {...currentRecord, \n                questions: currentRecord.questions.map((question, index) => index === indexQuestion\n                    ? {...question, \n                        answers: question.answers.map((answer, index) => index === IndexAnswer\n                            ? {...answer, votes: [...new Set([...answer.votes, username])]} \n                            : {...answer, votes: answer.votes.filter(value => value !== username)} ) }\n                    : question)\n            })\n        return({\n            success: true\n        })\n    } catch (error) {\n        return({\n            success: false\n        })\n    }\n}","import PouchDB from 'pouchdb'\nimport { create } from './questionnaire/create'\nimport { join } from './questionnaire/join'\nimport { submit } from './questionnaire/submit'\nimport { activate } from './questionnaire/activate'\nimport { answer } from './questionnaire/answer'\nimport { subscribe } from './questionnaire/subscribe'\n\nconst backendBaseUrl = process.env.NODE_ENV === 'production' ? \"https://askkyn.herokuapp.com\" : \"http://localhost:8080\"\n\nexport const db = new PouchDB(`${backendBaseUrl}/db/askkyn`)\n\nexport const createQuestionnaire = () => create(db)\nexport const joinQuestionnaire = (identifier, username) => join(db, identifier, username)\nexport const submitQuestionnaire = (identifier, questions) => submit(db, identifier, questions)\nexport const subscribeQuestionnaire = (identifier, onChange) => subscribe(db, identifier, onChange)\n\nexport const activateQuestion = (identifier, index) => activate(db, identifier, index)\nexport const answerQuestion = (identifier, username, indexQuestion, IndexAnswer) => answer(db, identifier, username, indexQuestion, IndexAnswer)","export const subscribe = (db, identifier, onChange) => {\n  console.log(\"here\")\n    db.changes({\n      live: true,\n      include_docs: true,\n      doc_ids: [identifier]\n    }).on('change', onChange);\n}","export default __webpack_public_path__ + \"static/media/logo.3fb2a5b6.webp\";","import React from \"react\"\nimport { Router, navigate } from \"@reach/router\"\nimport {Navbar, Modal} from \"react-bootstrap\"\nimport { Start } from \"./components/start/index.jsx\"\nimport { Questionnaire } from \"./components/questionnaire/index.jsx\"\nimport { Summary } from \"./components/summary/index.jsx\"\nimport { Answers } from \"./components/answers/index.jsx\"\nimport { useState } from 'react'\nimport { Grid } from 'svg-loaders-react'\nimport './App.scss'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { far } from \"@fortawesome/free-regular-svg-icons\"\nimport { fas } from \"@fortawesome/free-solid-svg-icons\"\nimport { createQuestionnaire, joinQuestionnaire, submitQuestionnaire, activateQuestion, answerQuestion, subscribeQuestionnaire, db } from './service'\nimport logo from './logo.webp'\n\nlibrary.add(fab, far, fas)\n\n\nconst Loading = ({ Component, ...rest }) =>{\n  const [isLoading,setIsLoading] = useState(true);\n  return (<>\n    <Component {...rest} finishedLoading={(err) => {\n      setIsLoading(false)\n      if(err)\n        navigate(`/error/${err}`)\n    }} />\n    <Modal\n        show={isLoading}\n        keyboard={false}\n        backdrop=\"static\"\n        size=\"sm\"\n        centered\n      >\n        <Modal.Body>\n          <Grid />\n        </Modal.Body>\n      </Modal>\n    </>)\n}\n\nconst PublicRoute = ({ ...rest }) => (\n  <Loading {...rest} />\n);\n\nconst App = () => {\n  return (<div id=\"main\">\n    <Navbar>\n      <Navbar.Brand href=\"/\">\n        <img\n          alt=\"\"\n          src={logo}\n          width=\"42\"\n          height=\"42\"\n          className=\"d-inline-block align-top\"\n        /> Askkyn\n      </Navbar.Brand>\n    </Navbar>\n   <Router>\n     <PublicRoute default path=\"default\" Component={Start} create={createQuestionnaire} join={joinQuestionnaire} />\n     <PublicRoute path=\"session/:sessionId\" Component={Start} join={joinQuestionnaire} create={createQuestionnaire} />\n     <PublicRoute path=\"session/:sessionId/questionnaire\" Component={Questionnaire} db={db} submit={submitQuestionnaire} />\n     <PublicRoute path=\"session/:sessionId/summary\" Component={Summary} db={db} activateQuestion={activateQuestion} subscribeChanges={subscribeQuestionnaire} />\n     <PublicRoute path=\"session/:sessionId/answers/:username\" Component={Answers} db={db} answerQuestion={answerQuestion} subscribeChanges={subscribeQuestionnaire} />\n   </Router>\n </div>)\n };\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}